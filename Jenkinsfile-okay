pipeline {
    agent any

    environment {
        AWS_ACCOUNT_ID      = credentials('ACCOUNT_ID')        // Jenkins secret text credential
        AWS_ECR_REPO_NAME   = credentials('ECR_REPO_CFK')      // Jenkins secret text credential
        AWS_DEFAULT_REGION  = 'ap-southeast-1'
    }

    stages {
        stage('Set REPOSITORY_URI') {
            steps {
                script {
                    env.REPOSITORY_URI = "${env.AWS_ACCOUNT_ID}.dkr.ecr.${env.AWS_DEFAULT_REGION}.amazonaws.com"
                }
            }
        }

        stage('Git Pulling') {
            steps {
                git branch: 'main', url: 'https://github.com/awssrini/poc1.git'
                sh 'ls -la'
                sh 'ls -la kubernetes_manifests_files || echo kubernetes_manifests_files directory not found'
            }
        }

        stage('Trivy File Scan') {
            steps {
                dir('kubernetes_manifests_files') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }

        stage('Trivy Image Scan') {
            steps {
                script {
                    def images = [
                        'confluentinc/cp-server:7.7.1',
                        'confluentinc/confluent-init-container:2.9.3',
                        'confluentinc/cp-enterprise-control-center:7.7.1',
                        'confluentinc/confluent-operator:0.1033.87'
                    ]

                    images.each { image ->
                        echo "Scanning image: ${image}"
                        sh 'trivy image ' + image + ' > trivy-' + image.replaceAll(/[:\/]/, '-') + '.txt'
                    }
                }
            }
        }

        stage('Deploying Confluent Kafka') {
            steps {
                withAWS(credentials: 'aws-creds', region: 'ap-southeast-1') {
                    withEnv(["AWS_DEFAULT_REGION=ap-southeast-1"]) {
                        dir('kubernetes_manifests_files') {
                            sh '''
                                # Configure kubeconfig
                                aws eks update-kubeconfig --name dev-medium-eks-cluster --region ${AWS_DEFAULT_REGION}

                                # Create namespace
                                kubectl create namespace confluent || true

 				# Download and extract CFK bundle
                                curl -O https://packages.confluent.io/bundle/cfk/confluent-for-kubernetes-2.9.6.tar.gz
                                tar -xzvf confluent-for-kubernetes-2.9.6.tar.gz

                                # Install Confluent Operator using Helm
                                cd confluent-for-kubernetes-2.9.6-*/helm
                                helm upgrade --install confluent-operator --namespace confluent confluent-for-kubernetes --set kRaftEnabled=true

                                # Return to kubernetes_manifests_files directory
                                cd ../../

                                # Load basic users
                                chmod +x load_c3_basic_users.sh
                                ./load_c3_basic_users.sh

                                # Apply Kafka and Control Center manifests
                                kubectl apply -f confluent-platform-kraft-7.7.0.yaml
                            '''
                        }
                    }
                }
            }
        }
    }
}
