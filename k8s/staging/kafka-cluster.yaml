apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent-staging
spec:
  replicas: 3
  image:
    application: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/confluentinc/cp-server:7.7.1-staging-${BUILD_NUMBER}
    init: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/confluentinc/confluent-init-container:2.9.3-staging-${BUILD_NUMBER}
  dataVolumeCapacity: 100Gi
  storageClass:
    name: gp3-csi
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  podTemplate:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
    podSecurityContext:
      fsGroup: 1001
      runAsUser: 1001
      runAsNonRoot: true
  configOverrides:
    server:
      - "confluent.cluster.link.enable=true"
      - "confluent.tier.enable=true"
      - "confluent.tier.backend=S3"
      - "confluent.tier.s3.bucket=cfk-tiered-storage-staging"
      - "confluent.tier.s3.region=${AWS_REGION}"
      - "log.retention.hours=168"
      - "log.segment.bytes=1073741824"
      - "log.retention.check.interval.ms=300000"
      - "num.network.threads=8"
      - "num.io.threads=16"
      - "socket.send.buffer.bytes=102400"
      - "socket.receive.buffer.bytes=102400"
      - "socket.request.max.bytes=104857600"
      - "num.partitions=3"
      - "default.replication.factor=3"
      - "min.insync.replicas=2"
      - "unclean.leader.election.enable=false"
      - "auto.create.topics.enable=false"
      - "group.initial.rebalance.delay.ms=3000"
      - "offsets.topic.replication.factor=3"
      - "transaction.state.log.replication.factor=3"
      - "transaction.state.log.min.isr=2"
  metricReporter:
    enabled: true
  dependencies:
    kafkaRest:
      authentication:
        type: bearer
        bearer:
          secretRef: rest-credential
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: confluent-staging
spec:
  replicas: 1
  image:
    application: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/confluentinc/cp-kafka-rest:7.7.1-staging-${BUILD_NUMBER}
    init: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/confluentinc/confluent-init-container:2.9.3-staging-${BUILD_NUMBER}
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
  podTemplate:
    podSecurityContext:
      fsGroup: 1001
      runAsUser: 1001
      runAsNonRoot: true
---
apiVersion: v1
kind: Secret
metadata:
  name: rest-credential
  namespace: confluent-staging
type: Opaque
data:
  bearer.txt: dGVzdA== # "test" base64 encoded
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-external
  namespace: confluent-staging
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: kafka
  ports:
    - name: external
      port: 9092
      targetPort: 9092
      protocol: TCP